[tool.poetry]
name = "python_template"
version = "0.1.0"
description = "Dolore fugiat ullamco voluptate incididunt voluptate voluptate magna esse eiusmod velit deserunt cillum ut do."
authors = [
  "Felix Hoffmann <felix.emmanuel.hoffmann@gmail.com>",
]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
loguru = "^0.6.0"
pandas = "^1.5.0"
numpy = "^1.23.3"
ipykernel = "^6.16.0"
mkdocs = {extras = ["python"], version = "^1.4.0"}
mkdocs-material = "^8.5.6"
mkdocstrings = {extras = ["python"], version = "^0.19.0"}
mkdocs-autorefs = "^0.4.1"

[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "^22.8.0"}
isort = "^5.10.1"
mypy = "^0.981"
pylint = "^2.15.3"
flake8 = "^5.0.4"
pytest = "^7.1.3"
autopep8 = "^1.7.0"
pre-commit = "^2.20.0"
pytest-cov = "^4.0.0"

[tool.mypy]
mypy_path = 'src'
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.black]
line-length = 120
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | venv
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | deploy
  | presentations
)/
'''

[tool.isort]
profile = "black"

[tool.pytest]
testpaths = "tests"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
