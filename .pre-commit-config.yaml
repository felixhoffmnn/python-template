ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: "main"
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: quarterly
  skip: [poetry-lock, poetry-export, pytest, pytest-cov]

default_language_version:
  python: python3.10

repos:
  - repo: https://github.com/python-poetry/poetry
    rev: "1.2.2"
    hooks:
      - id: poetry-check
        name: check poetry (poetry-check)
        always_run: true

      - id: poetry-lock
        name: lock poetry (poetry-lock)
        files: "pyproject.toml"

      - id: poetry-export
        name: export default dependencies (poetry-export)
        args: ["-f", "requirements.txt", "-o", "requirements.txt"]
        files: "pyproject.toml|poetry.lock"

      - id: poetry-export
        name: export dev dependencies (poetry-export)
        args: ["--only=dev", "-f", "requirements.txt", "-o", "requirements_dev.txt"]
        files: "pyproject.toml|poetry.lock"

      - id: poetry-export
        name: export poetry docs (poetry-export)
        args: ["--only=docs", "-f", "requirements.txt", "-o", "docs/requirements_docs.txt"]
        files: "pyproject.toml|poetry.lock"

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-case-conflict
        name: check case conflict (check-case-conflict)
        always_run: true

      - id: check-merge-conflict
        name: check merge conflict (check-merge-conflict)
        always_run: true

      - id: check-yaml
        name: check yaml (check-yaml)
        exclude: mkdocs.yaml
        stages: [commit, push]
        types: [yaml]

  - repo: https://github.com/pycqa/isort
    rev: 5.10.1
    hooks:
      - id: isort
        name: sort imports (isort)
        stages: [commit, push]
        types: [python]

  - repo: https://github.com/psf/black
    rev: 22.8.0
    hooks:
      - id: black
        name: format python code (black)
        stages: [commit, push]
        types: [python]

  - repo: https://github.com/PyCQA/flake8
    rev: 5.0.4
    hooks:
      - id: flake8
        name: check code style (flake8)
        stages: [commit, push]
        types: [python]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.982
    hooks:
      - id: mypy
        name: check types (mypy)
        stages: [commit, push]
        types: [python]
        additional_dependencies: [types-requests]
        require_serial: true

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: "v2.7.1"
    hooks:
      - id: prettier
        name: format files (prettier)
        stages: [commit, push]
        exclude_types: [python]

  - repo: https://github.com/zricethezav/gitleaks
    rev: v8.12.0
    hooks:
      - id: gitleaks

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.0.0
    hooks:
      - id: pyupgrade
        name: upgrade pre-commit (pyupgrade)
        stages: [commit, push]
        args: [--py310-plus]
        types: [python]
